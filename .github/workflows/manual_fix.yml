name: 5 Fix Release 🐛📦 

concurrency: develop

on:
  workflow_dispatch:
    inputs:
      version:
        description:  📦🐛 Versión en la que se arreglará el problema.
        required: true
        type: string
      version_fix:
        description: 📦✅ Nueva versión que tendrá la solución. Ej. Si la versión a corregir es 3.0.1 esta versión sería 3.0.2
        required: true
        type: string

env:
  AMBIENTE: develop
  MULE_ENV: Sandbox
  VERSION: ${{ inputs.version }}
  VERSION_FIX: ${{ inputs.version_fix }}
  ENV: dev

jobs:
  MuleTest:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '8'
        cache: 'maven'
    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        servers: |
          [
            {
              "id": "anypoint-exchange", 
              "username": "~~~Client~~~",
              "password": "${{secrets.MULE_CLIENT_ID}}~?~${{secrets.MULE_CLIENT_SECRET}}"
            },
            {
              "id": "MuleRepository", 
              "username": "${{secrets.MULE_REPO_USER}}",
              "password": "${{secrets.MULE_REPO_PASSWORD}}"
            }
          ]
        repositories: |
          [
            {
              "id": "MuleRepository",
              "url": "https://repository.mulesoft.org/nexus-ee/content/repositories/releases-ee/"
            }
          ]
    - name: "Asignar versión fix/x.x."
      if: ${{contains(github.ref, 'fix')}}
      run: |
        echo "# Version: ${GITHUB_REF:15}-$HASH" >> $GITHUB_STEP_SUMMARY
    - name: "Asignar versión main"
      if: ${{!contains(github.ref, 'fix')}}
      run: |
        echo "# Version: $VERSION-$HASH" >> $GITHUB_STEP_SUMMARY
    - name: "Changelog"
      run: |
        cat CHANGELOG.md >> $GITHUB_STEP_SUMMARY
    - name: "Pruebas MUnit"
      run: |
        mvn clean test -Denv=$ENV -Dlicense.skip=true
    - name: "Publicar resultados de pruebas"
      uses: EnricoMi/publish-unit-test-result-action@v2.0.0
      if: always()
      with:
        junit_files: "target/surefire-reports/*.xml"
  CrearRamaFix:
    runs-on: ubuntu-22.04
    environment: Develop
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Creando rama para solución de error (fix/x.x.x)"
        run: |
          # Configurando usuario de Github...
          git config --global user.name 'Github'
          git config --global user.email 'workflow@noreply.github.com'
          git branch --show-current

          # Creando rama fix/${{inputs.version_fix}}...
          git checkout ${{inputs.version}}
          git checkout -b fix/${{inputs.version_fix}}

          # Copiando los workflows actualizados...
          git checkout main .github/workflows/manual_deploy-pre.yml
          git checkout main .github/workflows/manual_deploy-prod.yml
          git checkout main .github/workflows/manual_fix.yml
          git checkout main .github/workflows/manual_redeploy.yml
          git checkout main .github/workflows/push-manual_deploy-dev.yml
          git commit -m "ci(github): Se agregan workflows actualizados" || echo "Sin cambios"
          git diff HEAD^ HEAD
          HASH=$(git rev-parse --verify HEAD)
          echo "hash=$HASH" >> $GITHUB_ENV
          git push origin fix/${{inputs.version_fix}}
######### Mule Deploy ###############
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '8'
          cache: 'maven'
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: |
            [
              {
                "id": "anypoint-exchange", 
                "username": "~~~Client~~~",
                "password": "${{secrets.MULE_CLIENT_ID}}~?~${{secrets.MULE_CLIENT_SECRET}}"
              },
              {
                "id": "MuleRepository", 
                "username": "${{secrets.MULE_REPO_USER}}",
                "password": "${{secrets.MULE_REPO_PASSWORD}}"
              }
            ]
          repositories: |
            [
              {
                "id": "MuleRepository",
                "url": "https://repository.mulesoft.org/nexus-ee/content/repositories/releases-ee/"
              }
            ]
      - name: Obtener nombre de proyecto
        run: |
          import os, re
          from xml.etree import ElementTree

          # Obtiene nombre del POM
          namespaces = {'xmlns' : 'http://maven.apache.org/POM/4.0.0'}
          tree = ElementTree.parse("pom.xml")
          root = tree.getroot()
          name = root.find("./xmlns:name", namespaces=namespaces)
          print(f"pom/name: {name}")

          # Convirte nombre a un nombre DNS valido
          nombre = re.sub(r"[^a-zA-Z0-9]+", "-", name.text).lower()
          print(f"nombre_limpio: {nombre}")      

          # Escribe variable
          print("Escribiendo nombre en GITHUB_ENV")
          with open(os.getenv('GITHUB_ENV'), "a") as github_env:
            github_env.write(f"nombre_limpio={nombre}")
        shell: python
      - name: "Construir y Publicar en Exchange"
        run: |
          mvn versions:set -DnewVersion=$VERSION_FIX-${{env.hash}}
          mvn clean deploy -Denv=$ENV -Dlicense.skip=true || echo "No se publico en exchange"
      - name: "Publicar resultados de pruebas"
        uses: EnricoMi/publish-unit-test-result-action@v2.0.0
        if: always()
        with:
          junit_files: "target/surefire-reports/*.xml"
      - name: "Desplegar"
        run: |
          mvn clean package deploy\
           -DmuleDeploy\
           -DskipTests\
           -Dlicense.skip=true\
           -Dclientid=${{secrets.MULE_CLIENT_ID}}\
           -Dclientsecret=${{secrets.MULE_CLIENT_SECRET}}\
           -Dappname=${{env.nombre_limpio}}-$AMBIENTE\
           -Denvironment=$MULE_ENV\
           -Danypoint_client_id=${{secrets.ANYPOINT_CLIENT_ID}}\
           -Danypoint_client_secret=${{secrets.ANYPOINT_CLIENT_SECRET}}\
           -Dreplicas=1\
           -Denv=$ENV